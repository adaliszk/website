name: Code Quality
on:
  workflow_dispatch: {}
  pull_request: {}
  push: {}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Node Environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Configure PNPM
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Retrieve PNPM store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Use PNPM cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: "${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}"
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

  qodana:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: Configure PNPM
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Qodana Analysis
        uses: JetBrains/qodana-action@v2024.1
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}

  turbo:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: Configure PNPM
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Turbo Linting
        run: pnpm lint

#  super:
#    needs: [setup]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Super Analysis
#        uses: super-linter/super-linter@v6.5.0
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}